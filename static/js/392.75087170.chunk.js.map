{"version":3,"file":"static/js/392.75087170.chunk.js","mappings":"2NACA,EAA2B,uBAA3B,EAA0D,oBAA1D,EAA2F,yB,oCCqF3F,EAhEa,WACX,IACQA,GADOC,EAAAA,EAAAA,MACPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CAGA,IAAMU,EAAW,mCAAG,sGAEhBJ,GAAa,GAFG,UAGKK,EAAAA,EAAAA,IAAaX,GAHlB,OAGVY,EAHU,OAIVC,EAAQD,EAAOT,KAAKW,KAAI,SAAAC,GAC5B,MAAO,CACLf,GAAIe,EAAKf,GACTgB,KAAMD,EAAKC,KACXC,UAAWF,EAAKE,UAChBC,MAAOH,EAAKI,aAEf,IACDf,EAAQS,GACRP,GAAa,GAbG,kDAehBc,QAAQC,IAAR,MACAb,GAAS,GAhBO,0DAAH,qDAmBjBE,GApBC,CAqBF,GAAE,CAACV,KAGF,4BACE,eAAIsB,UAAWC,EAAf,SACGpB,EAAKW,KAAI,SAAAD,GACR,OACE,gBAAIS,UAAWC,EAAf,UACGV,EAAMK,OACL,gBACEI,UAAWC,EACXC,IAAG,UAzDN,mCAyDM,OAAcX,EAAMK,OACvBO,IAAI,gBAGN,gBACEH,UAAWC,EACXC,IAAI,+IACJC,IAAI,wBAGR,uBAAIZ,EAAMG,QACV,uCAAeH,EAAMI,eAfQJ,EAAMb,GAkBxC,MAEFK,IAAa,yCACbE,IAAS,oCAGf,C,+LClFDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,mCAAsCC,IAD9B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAe,mCAAG,WAAM/B,GAAN,uFACN0B,EAAAA,EAAAA,IAAA,gBAAmB1B,EAAnB,oBAAiC2B,EAAjC,oBADM,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfE,EAAe,mCAAG,WAAMhC,GAAN,uFACN0B,EAAAA,EAAAA,IAAA,gBACZ1B,EADY,4BACU2B,EADV,2BADM,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfnB,EAAY,mCAAG,WAAMX,GAAN,uFACH0B,EAAAA,EAAAA,IAAA,gBACZ1B,EADY,4BACU2B,EADV,oBADG,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC0DO,IAFxD,cACnBL,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.jsx","shared/api/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listWrap\":\"cast_listWrap__U34ca\",\"actor\":\"cast_actor__cO6oa\",\"actorPhoto\":\"cast_actorPhoto__eCcXR\"};","import css from '../Cast/cast.module.css';\n\nimport { getMovieCast } from 'shared/api/movies';\n// import useAdditionalFetch from 'hooks/useAdditionalFetch';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst imgURL = 'https://image.tmdb.org/t/p/w500';\n\n// const Cast = ({ name, character, profile_path, cast }) => {\n//   const params = useParams();\n//   const { id } = params;\n//   const { actors, isLoading, error } = useAdditionalFetch({\n//     fetchData: getMovieCast,\n//     returnDetails: {\n//       id: id,\n//       name: name,\n//       character: character,\n//       photo: profile_path,\n//     },\n//     information: cast,\n//   });\nconst Cast = () => {\n  const params = useParams();\n  const { id } = params;\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n    const fetchActors = async () => {\n      try {\n        setIsLoading(true);\n        const result = await getMovieCast(id);\n        const actor = result.cast.map(item => {\n          return {\n            id: item.id,\n            name: item.name,\n            character: item.character,\n            photo: item.profile_path,\n          };\n        });\n        setCast(actor);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        setError(true);\n      }\n    };\n    fetchActors();\n  }, [id]);\n\n  return (\n    <div>\n      <ul className={css.listWrap}>\n        {cast.map(actor => {\n          return (\n            <li className={css.actor} key={actor.id}>\n              {actor.photo ? (\n                <img\n                  className={css.actorPhoto}\n                  src={`${imgURL}${actor.photo}`}\n                  alt=\"actor name\"\n                />\n              ) : (\n                <img\n                  className={css.actorPhoto}\n                  src=\"https://us.123rf.com/450wm/pavelstasevich/pavelstasevich1811/pavelstasevich181101027/112815900-no-image-available-icon-flat-vector.jpg?ver=6\"\n                  alt=\"no actor available\"\n                />\n              )}\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n      {isLoading && <p>...Loading...</p>}\n      {error && <p>Error!</p>}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'd0cbba0e8b5863a2012bf39c965ec970';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const searchMovie = async q => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${q}`\n  );\n  return response.data;\n};\n"],"names":["id","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","fetchActors","getMovieCast","result","actor","map","item","name","character","photo","profile_path","console","log","className","css","src","alt","axios","KEY","getTrendingMovies","response","data","getMovieDetails","getMovieReviews","searchMovie","q"],"sourceRoot":""}