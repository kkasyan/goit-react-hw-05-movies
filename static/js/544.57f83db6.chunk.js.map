{"version":3,"file":"static/js/544.57f83db6.chunk.js","mappings":"gNAIMA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAElBC,EAAO,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBJ,GAAa,GAFW,UAGEK,EAAAA,EAAAA,MAHF,gBAGhBC,EAHgB,EAGhBA,QACRR,EAAUQ,GACVN,GAAa,GALW,kDAOxBO,QAAQC,IAAR,MACAN,GAAS,GARe,0DAAH,qDAWzBE,GACD,GAAE,KAGD,4BACE,2CACCP,EAAOY,OAAS,IAAK,SAAChB,EAAD,CAAYI,OAAQA,IACzCE,IAAa,sCACbE,IAAS,oCAGf,EAED,YAEAN,EAAKe,aAAe,CAAEb,OAAQ,G,+LCpC9Bc,EAAAA,EAAAA,SAAAA,QAAyB,+BAMzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEC,QAFd,mCAE4BC,SAJ3B,QAI2CC,KAH3C,KAKN,IAAMT,EAAiB,mCAAG,oGACRM,EAAAA,EAAAA,IAAA,qBADQ,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,MADM,cACvBH,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfG,EAAe,mCAAG,WAAMD,GAAN,uFACNP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,cADM,cACvBH,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAY,mCAAG,WAAMF,GAAN,uFACHP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,cADG,cACpBH,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAW,mCAAG,WAAMC,GAAN,uFACFX,EAAAA,EAAAA,IAAA,kDACsBW,IAFpB,cACnBP,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qD","sources":["pages/Home/Home.jsx","shared/api/movies.js"],"sourcesContent":["import { lazy } from 'react';\nimport { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'shared/api/movies';\n\nconst MoviesList = lazy(() => import('../../components/MoviesList/MoviesList'));\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await getTrendingMovies();\n        setMovies(results);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        setError(true);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Error!</p>}\n    </div>\n  );\n};\n\nexport default Home;\n\nHome.defaultProps = { movies: [] };\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst lang = 'en-US';\nconst page = '1';\nconst KEY = 'd0cbba0e8b5863a2012bf39c965ec970';\n\naxios.defaults.params = { api_key: KEY, landuage: lang, page: page };\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/all/day?`);\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}?`);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews?`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits?`);\n  return response.data;\n};\n\nexport const searchMovie = async q => {\n  const response = await axios.get(\n    `search/movie?&include_adult=false&query=${q}`\n  );\n  return response.data;\n};\n"],"names":["MoviesList","lazy","Home","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","getTrendingMovies","results","console","log","length","defaultProps","axios","api_key","landuage","page","response","data","getMovieDetails","id","getMovieReviews","getMovieCast","searchMovie","q"],"sourceRoot":""}